'use strict';

var app = angular.module("COLT", [
	'colt.directives', 
	'log.view.directive',
	'log.visualizer.directive', 
	'ui.router', 
	'pasvaz.bindonce',
	'angular-google-analytics'
	]);

app.config(function(AnalyticsProvider) {
	AnalyticsProvider.setAccount('UA-40699654-4');
	AnalyticsProvider.trackPages(true);
});

app.run(function($rootScope, $http, Analytics) {

	$rootScope.$on('$stateChangeSuccess', function(event, toState){ 
		$rootScope.pageName = toState.pageName;
		$rootScope.pageIndex = toState.pageIndex;
		Analytics.trackPage(toState.url + ".html");
	});

	var gui = require('nw.gui');
	var projectFilePath = gui.App.argv
	if (projectFilePath == "") {
		projectFilePath = '_autogenerated.colt'
	};
	$http.get(projectFilePath,
		{transformResponse:function(data) {
			var x2js = new X2JS();
			var json = x2js.xml_str2json( data );
			return json;
		}
	})
	.then(function(res) {
		var model = $rootScope.model = res.data.xml;
		var initValues = function(path, properties, value) {
			var point = model;
			for (var i = path.length - 1; i >= 0; i--) {
				var step = path[i];
				if(!point.hasOwnProperty(path)){
					point[step] = {};
				}
				point = point[step];
			};
			for (var j = properties.length - 1; j >= 0; j--) {
				var prop = properties[j];
				if(!point.hasOwnProperty(prop)){
					point[step] = value;
				}
			};
		}

		initValues(['build'],['use-custom-output-path','use-real-time-transformation'],false);
		initValues(['build','offline-cms'],['integrate-mercury','run-mercury'],false);
		initValues(['build','security'],['use-inspectable'],false);
		initValues(['build','security'],['use-inspectable'],false);
		initValues(['build','precompile'],['coffee-script','type-script','use-less','use-sass'],false);
		initValues(['live','live'],['paused','live-html-edit','disable-in-minified','enable-debuger'],false);
		initValues(['live','settings'],['disconnect','clear-log'],false);

		console.log(model);
	});

	// nodeApp.loadProject("./test-project.colt").then(function(data) {
	// 	console.log("PROJECT:");
	// 	console.log(data);			
	// });
});

app.config(function($stateProvider, $urlRouterProvider) {
	$urlRouterProvider.otherwise("/settings");
	$stateProvider
	.state('settings', {
		url: "/settings",
		templateUrl: "partials/settings.html",
		pageName: "Project Settings",
		pageIndex: 0
	})
	.state('build', {
		url: "/build",
		templateUrl: "partials/build.html",
		pageName: "Production Build",
		pageIndex: 1
	})
	.state('log', {
		url: "/log",
		templateUrl: "partials/log.html",
		pageName: "Log",
		pageIndex: 2
	});
})
